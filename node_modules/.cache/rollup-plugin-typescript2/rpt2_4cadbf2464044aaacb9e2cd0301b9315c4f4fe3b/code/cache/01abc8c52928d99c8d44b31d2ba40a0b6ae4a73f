{"code":"import { basic } from \"./role/basic\";\r\n/*\r\n    creep work\r\n*/\r\nexport default class CreepExtension extends Creep {\r\n    //public work(data: SourceTargetData, role: string): void\r\n    work() {\r\n        let data = { \"target\": \"aaa\", \"source\": \"ddd\" };\r\n        //const config: ICreepConfig = worker['builder'](s);\r\n        let role = '';\r\n        //---------------- GET CREEP LOGIC --------------------\r\n        //console.log(this.memory['role']);\r\n        //console.log(this.memory['data'])\r\n        const creepLogic = basic[this.memory['role']](this.memory['data']);\r\n        //const creepLogic = basic[role](data);\r\n        // ------------------------ 第二步：执行 creep 准备阶段 ------------------------\r\n        // 没准备的时候就执行准备阶段\r\n        if (!this.memory['ready']) {\r\n            // 有准备阶段配置则执行\r\n            if (creepLogic.prepare && creepLogic.isReady) {\r\n                creepLogic.prepare(this);\r\n                this.memory['ready'] = creepLogic.isReady(this);\r\n            }\r\n            // 没有就直接准备完成\r\n            else\r\n                this.memory['ready'] = true;\r\n            return;\r\n        }\r\n        // ------------------------ 第三步：执行 creep 工作阶段 ------------------------\r\n        let stateChange = true;\r\n        // 执行对应阶段\r\n        // 阶段执行结果返回 true 就说明需要更换 working 状态\r\n        if (this.memory['working']) {\r\n            if (creepLogic.target)\r\n                stateChange = creepLogic.target(this);\r\n        }\r\n        else {\r\n            if (creepLogic.source)\r\n                stateChange = creepLogic.source(this);\r\n        }\r\n        // 状态变化了就切换工作阶段\r\n        if (stateChange)\r\n            this.memory['working'] = !this.memory['working'];\r\n    }\r\n}\r\n//# sourceMappingURL=mout.creep.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/creep/role/basic.ts"],"map":"{\"version\":3,\"file\":\"mout.creep.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/creep/mout.creep.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,KAAK,EAAE,MAAM,cAAc,CAAC;AAGrC;;EAEE;AAEF,MAAM,CAAC,OAAO,OAAO,cAAe,SAAQ,KAAK;IAC7C,yDAAyD;IAClD,IAAI;QACP,IAAI,IAAI,GAAqB,EAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;QAChE,oDAAoD;QACpD,IAAI,IAAI,GAAG,EAAE,CAAC;QACd,uDAAuD;QACvD,mCAAmC;QACnC,kCAAkC;QAElC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;QAClE,uCAAuC;QAGvC,sEAAsE;QAEtE,gBAAgB;QAChB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YACvB,aAAa;YACb,IAAI,UAAU,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE;gBAC1C,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;gBACxB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;aAClD;YACD,YAAY;;gBACP,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,IAAI,CAAA;YAChC,OAAM;SACT;QAED,sEAAsE;QAEtE,IAAI,WAAW,GAAG,IAAI,CAAA;QACtB,SAAS;QACT,mCAAmC;QACnC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;YACxB,IAAI,UAAU,CAAC,MAAM;gBAAE,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;SAC/D;aACI;YACD,IAAI,UAAU,CAAC,MAAM;gBAAE,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;SAC/D;QAED,eAAe;QACf,IAAI,WAAW;YAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAA;IACjE,CAAC;CACJ\"}"}
