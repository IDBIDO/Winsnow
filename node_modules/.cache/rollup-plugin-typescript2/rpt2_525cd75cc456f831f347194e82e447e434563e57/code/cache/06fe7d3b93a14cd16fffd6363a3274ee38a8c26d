{"code":"import { sendRequest } from \"@/colony/dpt_comunication\";\r\nconst roles = {\r\n    colonizer: (data) => ({\r\n        source: creep => {\r\n            const source = Game.getObjectById(data.source);\r\n            if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(source);\r\n            }\r\n            return creep.store.getFreeCapacity() <= 0;\r\n        },\r\n        target: creep => {\r\n            const cSide = creep.pos.findClosestByRange(FIND_CONSTRUCTION_SITES);\r\n            const controller = Game.rooms[creep.room.name].controller;\r\n            if (creep.upgradeController(controller) == ERR_NOT_IN_RANGE)\r\n                creep.moveTo(controller);\r\n            /*\r\n            if (cSide) {\r\n                if (creep.build(cSide) == ERR_NOT_IN_RANGE) creep.moveTo(cSide);\r\n            }\r\n            */\r\n            return (creep.store.getUsedCapacity() <= 0);\r\n        }\r\n    }),\r\n    builder: (data) => ({\r\n        source: creep => {\r\n            const source = Game.getObjectById(data.source);\r\n            if (creep.harvest(source) == ERR_NOT_IN_RANGE)\r\n                creep.moveTo(source);\r\n            // 自己身上的能量装满了，返回 true（切换至 target 阶段）\r\n            return creep.store.getFreeCapacity() <= 0;\r\n        },\r\n        target: creep => {\r\n            const target = Game.getObjectById(data.target);\r\n            if (creep.build(target) == ERR_NOT_IN_RANGE)\r\n                creep.moveTo(target);\r\n            return creep.store[RESOURCE_ENERGY] <= 0;\r\n        }\r\n    }),\r\n    harvester: (data) => ({\r\n        source: creep => {\r\n            const source = Game.getObjectById(data.source);\r\n            if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(source);\r\n            }\r\n            //change state if creep store max\r\n            return creep.store.getFreeCapacity() <= 0;\r\n        },\r\n        target: creep => {\r\n            let target;\r\n            target = Game.getObjectById(data.target);\r\n            //if target is a creep, throw a task to call a transporter\r\n            if (!target) {\r\n                if (!creep.memory['waiting']) {\r\n                    //publisher.callSourceTransporter(creep);\r\n                    sendRequest(creep.memory['roomName'], creep.memory['department'], creep.name);\r\n                    creep.memory['waiting'] = true;\r\n                }\r\n            }\r\n            /*\r\n            else if (target instanceof Creep) {\r\n                creep.transfer(target, RESOURCE_ENERGY)\r\n            }\r\n            */\r\n            else {\r\n                creep.transfer(target, RESOURCE_ENERGY);\r\n            }\r\n            return (creep.store.getUsedCapacity() <= 0);\r\n        }\r\n    }),\r\n    initializer: (data) => ({\r\n        source: creep => {\r\n            const source = Game.getObjectById(data.source);\r\n            if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n                creep.moveTo(source);\r\n            }\r\n            return creep.store.getFreeCapacity() <= 0;\r\n        },\r\n        target: creep => {\r\n            const queen = Game.creeps['Queen' + creep.room];\r\n            if (queen) {\r\n                if (creep.pos.isNearTo(queen.pos)) {\r\n                    creep.transfer(queen, 'energy');\r\n                }\r\n            }\r\n            else {\r\n                const target = Game.getObjectById(data.target.id);\r\n                if (target) {\r\n                    if (target instanceof ConstructionSite) {\r\n                        creep.build(target);\r\n                    }\r\n                    else if (target instanceof Structure) {\r\n                        creep.transfer(target, 'energy');\r\n                    }\r\n                }\r\n                else {\r\n                    const pos = new RoomPosition(data.target.pos[0], data.target.pos[1], creep.memory['roomName']);\r\n                    const container = pos.lookFor(LOOK_STRUCTURES)[0];\r\n                    creep.memory['data']['target'] = container.id;\r\n                }\r\n            }\r\n            return (creep.store.getUsedCapacity() <= 0);\r\n        }\r\n    }),\r\n    iniQueen: (data) => ({\r\n        source: creep => {\r\n            const nearInitializer = creep.pos.findClosestByRange(FIND_MY_CREEPS);\r\n            if (nearInitializer) {\r\n                creep.moveTo(nearInitializer);\r\n            }\r\n            // 自己身上的能量装满了，返回 true（切换至 target 阶段）\r\n            return creep.store.getFreeCapacity() <= 0;\r\n        },\r\n        target: creep => {\r\n            const nearSpawn = creep.pos.findClosestByRange(FIND_MY_SPAWNS);\r\n            if (nearSpawn) {\r\n                creep.moveTo(nearSpawn);\r\n                if (nearSpawn.store.getFreeCapacity())\r\n                    creep.transfer(nearSpawn, 'energy');\r\n            }\r\n            return creep.store[RESOURCE_ENERGY] <= 0;\r\n        }\r\n    }),\r\n    /*\r\n    transporter: (data: LogisticData): ICreepConfig => ({\r\n        source: creep => {\r\n            const sourceID = creep.memory['data']['source']['id'];\r\n            const source = Game.getObjectById(sourceID);\r\n            if (source instanceof Creep) {\r\n                creep.moveTo(source);\r\n            }\r\n    \r\n\r\n            return false;\r\n        },\r\n        target: creep => {\r\n            return false;\r\n        }\r\n\r\n    }),\r\n    */\r\n};\r\nexport default roles;\r\n//# sourceMappingURL=basic.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/colony/dpt_comunication.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/creep/taskPublisher.ts"],"map":"{\"version\":3,\"file\":\"basic.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/creep/role/basic.ts\"],\"names\":[],\"mappings\":\"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\"}"}
