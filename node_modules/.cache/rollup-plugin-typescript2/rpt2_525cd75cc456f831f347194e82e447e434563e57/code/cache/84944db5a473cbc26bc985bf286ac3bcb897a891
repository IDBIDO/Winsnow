{"code":"import * as planning from \"./RoomPlanning\";\r\nimport * as utils from \"./planningUtils\";\r\nimport * as acces from \"./planningAcces\";\r\nexport class TranslatePlanning {\r\n    constructor(mainRoom) {\r\n        this.mainRoom = mainRoom;\r\n    }\r\n    savePlanningModel() {\r\n        let roomStructsData;\r\n        let p = Game.flags.p;\r\n        let pc = Game.flags.pc;\r\n        let pm = Game.flags.pm;\r\n        let pa = Game.flags.pa;\r\n        let pb = Game.flags.pb;\r\n        const saPosition = [pa.pos.x, pa.pos.y];\r\n        const sbPosition = [pb.pos.x, pb.pos.y];\r\n        const cPosition = [pc.pos.x, pc.pos.y];\r\n        const mPosition = [pm.pos.x, pm.pos.y];\r\n        if (p) {\r\n            roomStructsData = planning.ManagerPlanner.computeManor(this.mainRoom, [pc, pm, pa, pb]);\r\n            Game.flags.p.remove();\r\n        }\r\n        if (roomStructsData) {\r\n            planning.HelperVisual.showRoomStructures(this.mainRoom, roomStructsData['structMap']);\r\n            Memory['colony'][this.mainRoom]['roomPlanning'] = {};\r\n            //save model\r\n            this.generateModel(roomStructsData['structMap']);\r\n            this.containerReference(roomStructsData['structMap']['container']);\r\n            this.linkReference(roomStructsData['structMap']['link']);\r\n            this.roadReference(roomStructsData['structMap']['road']);\r\n            this.labReference(roomStructsData['structMap']['lab']);\r\n            //let roadList =  utils.transformRoadToAdjacentList( roomStructsData['structMap']['road']);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    labReference(labList) {\r\n    }\r\n    roadReference(roadList) {\r\n        let roadListAdj = utils.transformRoadToAdjacentList(roadList);\r\n        const spawn0Pos = Memory['colony'][this.mainRoom]['roomPlanning']['model']['spawn'][0]['pos'];\r\n        const posRoadNearSpawn0 = utils.nearPointOne(spawn0Pos, roadList);\r\n        //Spawn0 to source1 path\r\n        const containerSource1Reference = Memory['colony'][this.mainRoom]['roomPlanning']['containerReference']['container_source1'];\r\n        const containerSource1Pos = Memory['colony'][this.mainRoom]['roomPlanning']['model']['container'][containerSource1Reference]['pos'];\r\n        const posRoadNearContainerSource1 = utils.nearPointOne(containerSource1Pos, roadList);\r\n        let spawn0ToSource1 = utils.roadPath(roadListAdj, posRoadNearSpawn0, posRoadNearContainerSource1);\r\n        //Spawn0 to source2 path\r\n        const containerSource2Reference = Memory['colony'][this.mainRoom]['roomPlanning']['containerReference']['container_source2'];\r\n        const containerSource2Pos = Memory['colony'][this.mainRoom]['roomPlanning']['model']['container'][containerSource2Reference]['pos'];\r\n        const posRoadNearContainerSource2 = utils.nearPointOne(containerSource2Pos, roadList);\r\n        let spawn0ToSource2 = utils.roadPath(roadListAdj, posRoadNearSpawn0, posRoadNearContainerSource2);\r\n        //Spawn0 to controller\r\n        const containerControllerReference = Memory['colony'][this.mainRoom]['roomPlanning']['containerReference']['container_controller'];\r\n        const containerControllerPos = Memory['colony'][this.mainRoom]['roomPlanning']['model']['container'][containerControllerReference]['pos'];\r\n        const posRoadNearContainerController = utils.nearPointOne(containerControllerPos, roadList);\r\n        let spawn0ToController = utils.roadPath(roadListAdj, posRoadNearSpawn0, posRoadNearContainerController);\r\n        //Spawn0 to mineral\r\n        const containerMineralReference = Memory['colony'][this.mainRoom]['roomPlanning']['containerReference']['container_mineral'];\r\n        const containerMineralPos = Memory['colony'][this.mainRoom]['roomPlanning']['model']['container'][containerMineralReference]['pos'];\r\n        const posRoadNearContainerMineral = utils.nearPointOne(containerMineralPos, roadList);\r\n        let spawn0ToMineral = utils.roadPath(roadListAdj, posRoadNearSpawn0, posRoadNearContainerMineral);\r\n        Memory['colony'][this.mainRoom]['roomPlanning']['roadReference'] = {\r\n            'spawn0ToSource1': spawn0ToSource1,\r\n            'spawn0ToSource2': spawn0ToSource2,\r\n            'spawn0ToController': spawn0ToController,\r\n            'spawn0ToMineral': spawn0ToMineral\r\n        };\r\n    }\r\n    linkReference(linkList) {\r\n        const containerReference = Memory['colony'][this.mainRoom]['roomPlanning']['containerReference'];\r\n        let posSourceContainer1 = acces.getPlanningStructurePos(this.mainRoom, 'container', containerReference['container_source1']);\r\n        let posSourceContainer2 = acces.getPlanningStructurePos(this.mainRoom, 'container', containerReference['container_source2']);\r\n        let posControllerContainer = acces.getPlanningStructurePos(this.mainRoom, 'container', containerReference['container_controller']);\r\n        let posCenterContainer = acces.getPlanningStructurePos(this.mainRoom, 'container', containerReference['container_mineral']);\r\n        let linkSourcel = utils.minDistance(posSourceContainer1, linkList);\r\n        let linkSource2 = utils.minDistance(posSourceContainer2, linkList);\r\n        let linkController = utils.minDistance(posControllerContainer, linkList);\r\n        let linkCenter;\r\n        for (let i = 0; i < linkList.length; ++i) {\r\n            if (i != linkSourcel && i != linkSource2 && i != linkController) {\r\n                linkCenter = i;\r\n            }\r\n        }\r\n        Memory['colony'][this.mainRoom]['roomPlanning']['linkReference'] = {\r\n            'link_source1': linkSourcel,\r\n            'link_source2': linkSource2,\r\n            'link_controller': linkController,\r\n            'link_center': linkCenter\r\n        };\r\n    }\r\n    containerReference(containerList) {\r\n        let posSource1 = Memory['colony'][this.mainRoom]['roomPlanning']['model']['source'][0]['pos'];\r\n        let posSource2 = Memory['colony'][this.mainRoom]['roomPlanning']['model']['source'][1]['pos'];\r\n        let posMineral = Memory['colony'][this.mainRoom]['roomPlanning']['model']['source'][2]['pos'];\r\n        let aux = Game.rooms[this.mainRoom].controller;\r\n        let posController = [aux.pos.x, aux.pos.y];\r\n        let containerSourcel = utils.minDistance(posSource1, containerList);\r\n        let containerSource2 = utils.minDistance(posSource2, containerList);\r\n        let containerMineral = utils.minDistance(posMineral, containerList);\r\n        let containerController = utils.minDistance(posController, containerList);\r\n        Memory['colony'][this.mainRoom]['roomPlanning']['containerReference'] = {\r\n            'container_source1': containerSourcel,\r\n            'container_source2': containerSource2,\r\n            'container_mineral': containerMineral,\r\n            'container_controller': containerController\r\n        };\r\n    }\r\n    /*\r\n        Planning model data.\r\n    */\r\n    generateModel(model) {\r\n        Memory['colony'][this.mainRoom]['roomPlanning']['model'] = {};\r\n        for (let structureName in model) {\r\n            Memory['colony'][this.mainRoom]['roomPlanning']['model'][structureName] = [];\r\n            for (let i in model[structureName])\r\n                Memory['colony'][this.mainRoom]['roomPlanning']['model'][structureName].push({ 'id': '', 'pos': model[structureName][i] });\r\n        }\r\n        const saPos = [Game.flags.pa.pos.x, Game.flags.pa.pos.y];\r\n        const sbPos = [Game.flags.pb.pos.x, Game.flags.pb.pos.y];\r\n        const mPos = [Game.flags.pm.pos.x, Game.flags.pm.pos.y];\r\n        Memory['colony'][this.mainRoom]['roomPlanning']['model']['source'] = [];\r\n        Memory['colony'][this.mainRoom]['roomPlanning']['model']['source'].push({ 'id': utils.getId(this.mainRoom, saPos, 'source'), 'pos': saPos });\r\n        Memory['colony'][this.mainRoom]['roomPlanning']['model']['source'].push({ 'id': utils.getId(this.mainRoom, sbPos, 'source'), 'pos': sbPos });\r\n        Memory['colony'][this.mainRoom]['roomPlanning']['model']['source'].push({ 'id': utils.getId(this.mainRoom, mPos, 'mineral'), 'pos': mPos });\r\n    }\r\n    savePlanningForEveryRCL(roadList) {\r\n        const memRoomPlanning = Memory['colony'][this.mainRoom]['roomPlanning'];\r\n        this.stage1(roadList);\r\n    }\r\n    stage1(roadList) {\r\n        const memRoomPlanning = Memory['colony'][this.mainRoom]['roomPlanning'];\r\n        //get the first spawn location from the model\r\n        memRoomPlanning['stage'] = {};\r\n        memRoomPlanning['stage']['spawn'] = [];\r\n        memRoomPlanning['stage']['spawn'].push(memRoomPlanning['model']['spawn'][0]);\r\n        //add container\r\n        let containerList = memRoomPlanning['model']['container'];\r\n        let posSource1 = memRoomPlanning['model']['source'][0];\r\n        let posSource2 = memRoomPlanning['model']['source'][1];\r\n        let posController = memRoomPlanning['model']['source'][2];\r\n        let containerSourcel = utils.minDistance(posSource1, containerList);\r\n        let containerSource2 = utils.minDistance(posSource2, containerList);\r\n        let containerController = utils.minDistance(posController, containerList);\r\n        memRoomPlanning['stage']['container'] = [];\r\n        memRoomPlanning['stage']['container'].push(containerSourcel);\r\n        memRoomPlanning['stage']['container'].push(containerSource2);\r\n        memRoomPlanning['stage']['container'].push(containerController);\r\n    }\r\n}\r\n//# sourceMappingURL=TranslatePlanning.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/roomPlanning/RoomPlanning.js","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/roomPlanning/planningUtils.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/roomPlanning/planningAcces.ts"],"map":"{\"version\":3,\"file\":\"TranslatePlanning.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/roomPlanning/TranslatePlanning.ts\"],\"names\":[],\"mappings\":\"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\"}"}
