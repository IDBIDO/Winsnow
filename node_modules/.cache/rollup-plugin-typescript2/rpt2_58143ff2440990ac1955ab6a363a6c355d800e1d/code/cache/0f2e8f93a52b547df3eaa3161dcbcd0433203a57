{"code":"import { Tower } from \"./Tower\";\r\nexport class ControllerOrder {\r\n    constructor(roomName) {\r\n        this.mainRoom = roomName;\r\n        this.controller = Game.rooms[roomName].controller;\r\n        this.memory = Memory['colony'][roomName]['state']['controller'];\r\n    }\r\n    sendFillTask() {\r\n        Memory['colony'][this.mainRoom]['dpt_logistic']['fillTask'] = true;\r\n    }\r\n    checkRoomEnergy() {\r\n        const energyCapacity = Game.rooms[this.mainRoom].energyCapacityAvailable;\r\n        const energyAvailable = Game.rooms[this.mainRoom].energyAvailable;\r\n        if (energyAvailable < energyCapacity) {\r\n            this.sendFillTask();\r\n            //this.memory['fillTaskTTL'] = Game.time + 50;\r\n        }\r\n        else {\r\n            //this.memory['fillTaskTTL'] = -1;\r\n        }\r\n    }\r\n    checkRCL() {\r\n        const actualRCL = this.memory['actualRCL'];\r\n        const rcl = Game.rooms[this.mainRoom].controller.level;\r\n        if (rcl > actualRCL) {\r\n            this.memory['actualRCL'] = rcl;\r\n            Memory['colony'][this.mainRoom]['state']['buildColony']['task']['levelUP'] = true;\r\n        }\r\n    }\r\n    checkRoads() {\r\n        const roadList = Memory['colony'][this.mainRoom]['roomPlanning']['model']['road'];\r\n        for (let i = 0; i < roadList.length; ++i) {\r\n            const roadId = roadList[i]['id'];\r\n            if (roadId) {\r\n                const road = Game.getObjectById(roadId);\r\n                if (road.hits < road.hitsMax - 800) {\r\n                    Tower.sendRoadRepairTask(this.mainRoom, roadId);\r\n                }\r\n            }\r\n        }\r\n        //check Container\r\n        const containerList = Memory['colony'][this.mainRoom]['roomPlanning']['model']['container'];\r\n        for (let i = 0; i < containerList.length; ++i) {\r\n            const containerId = containerList[i]['id'];\r\n            if (containerId) {\r\n                const container = Game.getObjectById(containerId);\r\n                if (container.hits < container.hitsMax - 800) {\r\n                    Tower.sendRoadRepairTask(this.mainRoom, containerId);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    findHostileCreeps() {\r\n        const room = Game.rooms[this.mainRoom];\r\n        const targets = room.find(FIND_HOSTILE_CREEPS);\r\n        for (let i = 0; i < targets.length; ++i) {\r\n            Tower.sendAttackTask(this.mainRoom, targets[i].id);\r\n        }\r\n    }\r\n    run() {\r\n        //realise fill task\r\n        if (Game.time % 3 == 0) {\r\n            this.checkRoomEnergy();\r\n        }\r\n        if (Game.time % 7 == 0) {\r\n            this.findHostileCreeps();\r\n        }\r\n        // room fase change\r\n        if (Game.time % 53 == 0) {\r\n            this.checkRCL();\r\n        }\r\n        //road repair\r\n        if (Game.time % 7919 == 0) {\r\n            this.checkRoads();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=ControllerOrder.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/colony/nameManagement.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/structure/Tower.ts"],"map":"{\"version\":3,\"file\":\"ControllerOrder.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/structure/ControllerOrder.ts\"],\"names\":[],\"mappings\":\"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\"}"}
