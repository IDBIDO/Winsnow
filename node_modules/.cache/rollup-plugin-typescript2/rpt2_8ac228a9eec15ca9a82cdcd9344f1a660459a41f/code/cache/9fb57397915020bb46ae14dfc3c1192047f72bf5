{"code":"import { Department } from \"../Department\";\r\nimport * as dpt_config from \"@/department/dpt_config\";\r\nimport * as names from \"@/colony/nameManagement\";\r\nimport { CreepSpawning } from \"@/structure/CreepSpawning\";\r\nexport default class Dpt_Build extends Department {\r\n    constructor(dptRoom) {\r\n        super(dptRoom, 'dpt_build');\r\n    }\r\n    recycleCreepsDead() {\r\n        const ticksToSpawn = this.memory['ticksToSpawn'];\r\n        for (let creepName in ticksToSpawn) {\r\n            if (Game.time >= ticksToSpawn[creepName]) {\r\n                this.sendSpawnTask(creepName, 'worker');\r\n                delete ticksToSpawn[creepName];\r\n                console.log(111111111111111111);\r\n            }\r\n        }\r\n    }\r\n    realiaseBuildTask() {\r\n        const rclEnergy = dpt_config.getEnergyRCL(Game.rooms[this.mainRoom].energyCapacityAvailable);\r\n        const memReference = Memory['colony'][this.mainRoom]['roomPlanning']['stage'];\r\n        for (let structureName in memReference) {\r\n            for (let i = 0; i < memReference[structureName].length; ++i) {\r\n                this.memory['buildTask'].push({ 'name': structureName, 'position': memReference[structureName] });\r\n                for (let j = 0; j < memReference[structureName].length; ++j) {\r\n                    const pos = new RoomPosition(memReference[structureName][j][0], memReference[structureName][j][1], this.mainRoom);\r\n                    console.log(pos);\r\n                    pos.createConstructionSite(structureName);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    getBuildersNeeded() {\r\n        const buildCost = this.memory['buildCost'];\r\n        const availableEnergy = Game.rooms[this.mainRoom].energyCapacityAvailable;\r\n        const energyRCL = dpt_config.getEnergyRCL(availableEnergy);\r\n        if (energyRCL <= 4) {\r\n            const num = Math.trunc(buildCost / 1000) + 1;\r\n            if (num > 5)\r\n                return 5;\r\n            else\r\n                return num;\r\n        }\r\n        else if (energyRCL == 5) {\r\n            const num = Math.trunc(buildCost / 2 / 1000) + 1;\r\n            if (num > 5)\r\n                return 5;\r\n            else\r\n                return num;\r\n        }\r\n        else if (energyRCL == 6) {\r\n            const num = Math.trunc(buildCost / 3 / 1000) + 1;\r\n            if (num > 5)\r\n                return 5;\r\n            else\r\n                return num;\r\n        }\r\n        else if (energyRCL == 7) {\r\n            const num = Math.trunc(buildCost / 5 / 1000) + 1;\r\n            if (num > 5)\r\n                return 5;\r\n            else\r\n                return num;\r\n        }\r\n        else {\r\n            const num = Math.trunc(buildCost / 7 / 1000) + 1;\r\n            if (num > 5)\r\n                return 5;\r\n            else\r\n                return num;\r\n        }\r\n    }\r\n    getAliveCreeps() {\r\n        const creepList = this.memory['ticksToSpawn'];\r\n        let n = 0;\r\n        for (let creepName in creepList) {\r\n            if (Game.creeps[creepName] || creepList[creepName] == null)\r\n                ++n;\r\n        }\r\n        return n;\r\n    }\r\n    static existTask(roomName) {\r\n        return (Memory['colony'][roomName]['dpt_build']['buildCost'] > 0);\r\n    }\r\n    static deleteBuildTask(roomName, id, pos) {\r\n        //delete task and actualize creepCost\r\n        const task = Memory['colony'][roomName]['dpt_build']['buildTask'][id];\r\n        if (task) {\r\n            //save structure id to planning model \r\n            const constuctionSidePos = new RoomPosition(pos[0], pos[1], roomName);\r\n            const structure = constuctionSidePos.lookFor(LOOK_STRUCTURES);\r\n            Memory['colony'][roomName]['roomPlanning']['model'][task.type][task.modelReference]['id'] = structure[0].id;\r\n            const type = Memory['colony'][roomName]['dpt_build']['buildTask'][id]['type'];\r\n            const buildCost = Memory['colony'][roomName]['dpt_build']['buildCost'];\r\n            Memory['colony'][roomName]['dpt_build']['buildCost'] = buildCost - CONSTRUCTION_COST[type];\r\n            delete Memory['colony'][roomName]['dpt_build']['buildTask'][id];\r\n        }\r\n        //check if all task complete\r\n        if (Memory['colony'][roomName]['dpt_build']['buildCost'] == 0) {\r\n            Memory['colony'][roomName]['state']['buildColony']['task']['building'] = true;\r\n        }\r\n    }\r\n    creepsSavedDeath() {\r\n        const creepList = this.memory['ticksToSpawn'];\r\n        let creepsDeadName = [];\r\n        for (let creepName in creepList) {\r\n            if (creepList[creepName] && creepList[creepName] <= Game.time)\r\n                creepsDeadName.push(creepName);\r\n        }\r\n        return creepsDeadName;\r\n    }\r\n    checkCreepNum() {\r\n        const buildTaskID = Object.keys(this.memory['buildTask']);\r\n        if (buildTaskID.length <= 0)\r\n            return;\r\n        else {\r\n            const buildersNeeded = this.getBuildersNeeded();\r\n            const creepAlive = this.getAliveCreeps();\r\n            let needToSpawn = buildersNeeded - creepAlive;\r\n            //spawn no saved transporter\r\n            for (let i = 0; i < needToSpawn; ++i) {\r\n                const creepName = names.creepName();\r\n                const data = {\r\n                    source: {\r\n                        id: null,\r\n                        roomName: this.mainRoom,\r\n                        pos: null\r\n                    },\r\n                    target: null\r\n                };\r\n                CreepSpawning.sendToSpawnInitializacion(this.mainRoom, creepName, 'transporter', data, '-', false);\r\n            }\r\n            if (needToSpawn <= 0)\r\n                return;\r\n            else {\r\n                const buildersSaved = this.creepsSavedDeath();\r\n                //spawn saved builders\r\n                for (let i = 0; i < buildersSaved.length && needToSpawn; ++i) {\r\n                    CreepSpawning.sendToSpawnRecycle(this.mainRoom, buildersSaved[i], 'builder');\r\n                    //this.sendSpawnTask(buildersSaved[i], 'builder');\r\n                    this.memory['ticksToSpawn'][buildersSaved[i]] = null;\r\n                    --needToSpawn;\r\n                }\r\n                while (needToSpawn) {\r\n                    //create new builder unsaved\r\n                    //create builder\r\n                    const creepName = names.creepName();\r\n                    const data = {\r\n                        source: null,\r\n                        target: {\r\n                            id: null,\r\n                            pos: null,\r\n                            roomName: null\r\n                        },\r\n                        logisticCreepName: null\r\n                    };\r\n                    CreepSpawning.sendToSpawnInitializacion(this.mainRoom, creepName, 'builder', data, 'dpt_build', false);\r\n                    this.memory['ticksToSpawn'][creepName] = null;\r\n                    --needToSpawn;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    run() {\r\n        /*\r\n        if (Memory['colony'][this.mainRoom]['state']['updateCreepNumWorker']) {\r\n            //this.actualizeCreepNum();\r\n            Memory['colony'][this.mainRoom]['state']['updateCreepNumWorker'] = false;\r\n        }\r\n\r\n        if (Memory['colony'][this.mainRoom]['state']['updateRoomPlanning']) {\r\n            this.realiaseBuildTask();\r\n            Memory['colony'][this.mainRoom]['state']['updateRoomPlanning'] = false;\r\n        }\r\n        this.creepExecution();\r\n\r\n        if (Game.time%7) this.recycleCreepsDead();\r\n*/\r\n        if (Game.time % 23 == 0) {\r\n            this.checkCreepNum();\r\n            //this.memory['actualize'] = false;\r\n        }\r\n        if (Game.time % 13 == 0) {\r\n            //this.recycleCreepsDead();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Dpt_Build.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/department/Department.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/department/dpt_config.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/creep/setting.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/colony/nameManagement.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/structure/CreepSpawning.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/node_modules/@types/lodash/index.d.ts"],"map":"{\"version\":3,\"file\":\"Dpt_Build.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/department/dpt_build/Dpt_Build.ts\"],\"names\":[],\"mappings\":\"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\"}"}
