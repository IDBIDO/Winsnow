{"code":"import { sendRequest } from \"@/colony/dpt_comunication\";\r\nconst roles = {\r\n    manager: (data) => ({\r\n        source: creep => {\r\n            return true;\r\n        },\r\n        target: creep => {\r\n            return false;\r\n        }\r\n    }),\r\n    worker: (data) => ({\r\n        source: creep => {\r\n            const task = creep.memory['task'];\r\n            if (task['target']['id'] == null) {\r\n                if (creep.memory['waiting'])\r\n                    creep.say('zz');\r\n                else {\r\n                    sendRequest(creep.memory['roomName'], 'dpt_work', creep.name);\r\n                    creep.memory['waiting'] = true; //dpt_work will change to false\r\n                }\r\n                return false;\r\n            }\r\n            else {\r\n                const taskType = task['type'];\r\n                return workerTaskOperation[taskType].source(creep);\r\n            }\r\n        },\r\n        target: creep => {\r\n            const taskType = creep.memory['task']['type'];\r\n            return workerTaskOperation[taskType].target(creep);\r\n        }\r\n    }),\r\n    transporter: (data) => ({\r\n        source: creep => {\r\n            /*\r\n            const sourceData = creep.memory['task']['source'];\r\n            let move = 'MOVE';\r\n            if (sourceData) return transferTaskOperations[move].source(creep)\r\n            else {\r\n                creep.say('ðŸ’¤')\r\n                return true;\r\n            }\r\n            */\r\n            creep.say('zz');\r\n            return false;\r\n            if (creep.memory['task'] = null) {\r\n                if (creep.memory['sleeping']) {\r\n                    creep.say('ðŸ’¤');\r\n                    return false;\r\n                }\r\n                else\r\n                    return true; //change to target to getTask\r\n            }\r\n            else {\r\n                if (creep.memory['sleeping'])\r\n                    creep.memory['sleeping'] = false;\r\n                //WORKING CODE\r\n                const taskType = creep.memory['task']['type'];\r\n                return transferTaskOperations[taskType].source(creep);\r\n            }\r\n        },\r\n        target: creep => {\r\n            if (creep.memory['task'] = null) {\r\n                sendRequest(creep.memory['roomName'], creep.memory['department'], creep.name);\r\n                creep.memory['sleeping'] = true;\r\n                return true;\r\n            }\r\n            else {\r\n                //WORKING CODE\r\n                const taskType = creep.memory['task']['type'];\r\n                return transferTaskOperations[taskType].source(creep);\r\n            }\r\n            return false;\r\n        }\r\n    })\r\n};\r\nexport const workerTaskOperation = {\r\n    BUILD: {\r\n        source: (creep) => {\r\n            const pos = creep.memory['task']['target']['pos'];\r\n            const targetPos = new RoomPosition(pos[0], pos[1], creep.memory['roomName']);\r\n            if (creep.pos.inRangeTo(targetPos, 3))\r\n                return true;\r\n            else\r\n                return false;\r\n        },\r\n        target: (creep) => {\r\n            const target = Game.getObjectById(creep.memory['task']['target']['id']);\r\n            if (target) { //@ts-ignore\r\n                creep.build(target);\r\n                return false;\r\n            }\r\n            else {\r\n                //notify contruction completation\r\n            }\r\n        }\r\n    },\r\n    REPAIR: {\r\n        source: (creep) => {\r\n            return false;\r\n        },\r\n        target: (creep) => {\r\n            return false;\r\n        }\r\n    }\r\n};\r\nexport const transferTaskOperations = {\r\n    MOVE: {\r\n        source: (creep) => {\r\n            creep.say('ðŸ’¤');\r\n            return false;\r\n            /*\r\n            const sourceData = creep.memory['task']['source'];\r\n            const targetPos:RoomPosition = new RoomPosition(sourceData['pos'][0], sourceData['pos'][1], sourceData['roomName'])\r\n            creep.moveTo(targetPos)\r\n            if (creep.pos.isNearTo(targetPos)) {\r\n                return true;\r\n            }\r\n            return false;\r\n            */\r\n        },\r\n        target: (creep) => {\r\n            const targetData = creep.memory['task']['target'];\r\n            const target = Game.getObjectById(targetData['id']);\r\n            if (target) {\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    TRANSFER: {\r\n        source: (creep) => {\r\n            return false;\r\n        },\r\n        target: (creep) => {\r\n            return false;\r\n        }\r\n    },\r\n    WITHDRAW: {\r\n        source: (creep) => {\r\n            return false;\r\n        },\r\n        target: (creep) => {\r\n            return false;\r\n        }\r\n    }\r\n};\r\nexport default roles;\r\n//# sourceMappingURL=advanced.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/colony/dpt_comunication.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/roomPlanning/planningUtils.ts"],"map":"{\"version\":3,\"file\":\"advanced.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/creep/role/advanced.ts\"],\"names\":[],\"mappings\":\"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\"}"}
