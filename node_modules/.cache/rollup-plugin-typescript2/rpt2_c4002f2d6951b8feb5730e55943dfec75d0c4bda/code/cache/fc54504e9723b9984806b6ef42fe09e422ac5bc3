{"code":"import * as setting from \"@/creep/setting\";\r\nexport class CreepSpawning {\r\n    constructor(mainRoom) {\r\n        this.mainRoom = mainRoom;\r\n        this.memory = Memory['colony'][mainRoom]['creepSpawning'];\r\n    }\r\n    /*\r\n        colonyMem['Spawning'] = {};\r\n        colonyMem['Spawning']['spawn'] = [];\r\n        colonyMem['Spawning']['task'] = [];\r\n        colonyMem['Spawning']['completeTask'] = {};\r\n    */\r\n    notifyTaskComplete(name, role, dpt) {\r\n        const completeTaskList = this.memory['completeTask'];\r\n        const energyRCL = setting.getEnergyRCL(Game.rooms[this.mainRoom].energyCapacityAvailable);\r\n        /*\r\n        const completeTask: SpawnTaskComplete = {\r\n            creepName: name,\r\n            deadTime: setting.ticksToSpawn(role, energyRCL) + 1500 + 10\r\n        };\r\n        */\r\n        //console.log(dpt);\r\n        //console.log(name);\r\n        //console.log(setting.ticksToSpawn(role, energyRCL));\r\n        Memory['colony'][this.mainRoom][dpt]['ticksToSpawn'][name] = Game.time + setting.ticksToSpawn(role, energyRCL) + 1500 + 10;\r\n    }\r\n    uid() {\r\n        //return (performance.now().toString(36)+Math.random().toString(36)).replace(/\\./g,\"\");\r\n        return (Math.random().toString(36).substr(2, 9));\r\n    }\r\n    spawn(spawnName, creepName, creepRole, creepData, dpt) {\r\n        const spawn = Game.spawns[spawnName];\r\n        const energyRCL = setting.getEnergyRCL(Game.rooms[this.mainRoom].energyCapacityAvailable);\r\n        //console.log(energyRCL);\r\n        const creepBody = setting.getBody(creepRole, energyRCL);\r\n        return spawn.spawnCreep(creepBody, creepName, {\r\n            memory: {\r\n                role: creepRole,\r\n                department: dpt,\r\n                roomName: this.mainRoom,\r\n                task: creepData\r\n            }\r\n        });\r\n    }\r\n    spawnTaskExecution() {\r\n        const spawnTask = this.memory['task'];\r\n        let spawnIndex = 0;\r\n        for (let creepName in spawnTask) {\r\n            //console.log(creepName);\r\n            const spawnList = this.memory['spawn'];\r\n            if (spawnIndex < spawnList.length) {\r\n                const spawnName = spawnList[spawnIndex];\r\n                const creepRole = spawnTask[creepName]['role'];\r\n                const creepDpt = spawnTask[creepName]['department'];\r\n                const creepData = spawnTask[creepName]['task']; //////////////////////\r\n                if (this.spawn(spawnName, creepName, creepRole, creepData, creepDpt) == OK) {\r\n                    delete spawnTask[creepName];\r\n                    this.notifyTaskComplete(creepName, creepRole, creepDpt);\r\n                }\r\n                ++spawnIndex;\r\n            }\r\n        }\r\n    }\r\n    getAvailableSpawnName() {\r\n        const spawnList = this.memory['spawn'];\r\n        for (let i = 0; i < spawnList.length; ++i) {\r\n            if (Game.spawns[spawnList[i]].spawning == null)\r\n                return spawnList[i];\r\n        }\r\n        return null;\r\n    }\r\n    /**Creep Queen must be spawned or spawing */\r\n    renewQueen() {\r\n        const queen = Game.creeps['Queen' + this.mainRoom];\r\n        if (queen) {\r\n            if (queen.spawning)\r\n                return false;\r\n            else if (queen.ticksToLive < 200)\r\n                return true;\r\n        }\r\n    }\r\n    spawnQueen() {\r\n        const spawnName = this.getAvailableSpawnName();\r\n        if (spawnName) {\r\n            //console.log(spawnName);\r\n            const source = {\r\n                id: null,\r\n                roomName: null,\r\n                pos: null\r\n            };\r\n            const data = {\r\n                source: source,\r\n                target: null\r\n            };\r\n            let r = this.spawn(spawnName, 'Queen' + this.mainRoom, 'iniQueen', data, 'dpt_logistic');\r\n            console.log(r);\r\n        }\r\n    }\r\n    run() {\r\n        const queen = Game.creeps['Queen' + this.mainRoom];\r\n        if (!queen) {\r\n            this.spawnQueen();\r\n        }\r\n        this.spawnTaskExecution();\r\n    }\r\n}\r\n//# sourceMappingURL=CreepSpawning.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/creep/setting.ts"],"map":"{\"version\":3,\"file\":\"CreepSpawning.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/structure/CreepSpawning.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,OAAO,MAAM,iBAAiB,CAAA;AAE1C,MAAM,OAAO,aAAa;IAItB,YAAY,QAAgB;QACxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;IAC9D,CAAC;IAED;;;;;MAKE;IAGM,kBAAkB,CAAC,IAAY,EAAE,IAAY,EAAE,GAAW;QAC9D,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACrD,MAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;QAC1F;;;;;UAKE;QACH,mBAAmB;QACnB,oBAAoB;QACpB,qDAAqD;QACpD,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,EAAE,SAAS,CAAC,GAAG,IAAI,GAAG,EAAE,CAAC;IAE/H,CAAC;IAEM,GAAG;QACN,uFAAuF;QACvF,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;IACpD,CAAC;IAEO,KAAK,CAAC,SAAiB,EAAE,SAAiB,EAAE,SAAiB,EAAE,SAAY,EAAE,GAAW;QAC5F,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,uBAAuB,CAAC,CAAC;QAC1F,yBAAyB;QAEzB,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAExD,OAAO,KAAK,CAAC,UAAU,CAAC,SAAS,EAAE,SAAS,EAAE;YAC1C,MAAM,EAAE;gBACJ,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,GAAG;gBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,IAAI,EAAE,SAAS;aAClB;SACJ,CAAC,CAAA;IAEN,CAAC;IAEO,kBAAkB;QAEtB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;QACrC,IAAI,UAAU,GAAG,CAAC,CAAC;QAEnB,KAAK,IAAI,SAAS,IAAI,SAAS,EAAE;YAC7B,yBAAyB;YAEzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,EAAE;gBAEjC,MAAM,SAAS,GAAU,SAAS,CAAC,UAAU,CAAC,CAAC;gBAC/C,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;gBAC/C,MAAM,QAAQ,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,CAAC;gBACpD,MAAM,SAAS,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,CAAG,sBAAsB;gBACxE,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE;oBAC1E,OAAO,SAAS,CAAC,SAAS,CAAC,CAAC;oBAE5B,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;iBACzD;gBAED,EAAE,UAAU,CAAC;aACd;SAEJ;IACL,CAAC;IAEO,qBAAqB;QAEzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAG,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACxC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,IAAI;gBAAE,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;SACvE;QACD,OAAO,IAAI,CAAC;IAEhB,CAAC;IAED,4CAA4C;IACpC,UAAU;QACd,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,KAAK,EAAE;YACP,IAAI,KAAK,CAAC,QAAQ;gBAAE,OAAO,KAAK,CAAC;iBAC5B,IAAI,KAAK,CAAC,WAAW,GAAG,GAAG;gBAAE,OAAO,IAAI,CAAC;SACjD;IACL,CAAC;IAEO,UAAU;QACd,MAAM,SAAS,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE/C,IAAI,SAAS,EAAE;YACX,yBAAyB;YAEzB,MAAM,MAAM,GAAuB;gBAC/B,EAAE,EAAE,IAAI;gBACR,QAAQ,EAAE,IAAI;gBACd,GAAG,EAAE,IAAI;aACZ,CAAA;YACD,MAAM,IAAI,GAAiB;gBACvB,MAAM,EAAE,MAAM;gBACd,MAAM,EAAE,IAAI;aACf,CAAA;YACD,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,OAAO,GAAE,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;YACxF,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAGlB;IACL,CAAC;IAEM,GAAG;QACN,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,KAAK,EAAE;YAER,IAAI,CAAC,UAAU,EAAE,CAAC;SACrB;QAID,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAE9B,CAAC;CAGJ\"}"}
