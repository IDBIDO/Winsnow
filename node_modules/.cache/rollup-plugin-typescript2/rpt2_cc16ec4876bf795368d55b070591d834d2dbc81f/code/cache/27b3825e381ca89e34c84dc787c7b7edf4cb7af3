{"code":"import { creepName } from \"@/colony/nameManagement\";\r\nimport { getContainerID } from \"@/operationResearch/planningUtils\";\r\nimport { CreepSpawning } from \"@/structure/CreepSpawning\";\r\nimport { Department } from \"../Department\";\r\nexport default class Dpt_Upgrader extends Department {\r\n    constructor(dptRoom) {\r\n        super(dptRoom, 'dpt_upgrade');\r\n    }\r\n    containerStage() {\r\n        if (!this.memory['storage'][0])\r\n            return;\r\n        const containerID = this.memory['storage'][0];\r\n        //calculate energy in container\r\n        const containerID1 = getContainerID(this.mainRoom, 'container_source1');\r\n        const containerID2 = getContainerID(this.mainRoom, 'container_source2');\r\n        //@ts-ignore\r\n        const container1 = Game.getObjectById(containerID1); //@ts-ignore\r\n        const container2 = Game.getObjectById(containerID2); //@ts-ignore\r\n        const energyInContainers = container1.store[RESOURCE_ENERGY] + container2.store[RESOURCE_ENERGY];\r\n        if (energyInContainers > 3000) {\r\n            //create a transporter\r\n            const nameT = creepName();\r\n            const dataT = {\r\n                source: {\r\n                    id: null,\r\n                    roomName: this.mainRoom,\r\n                    pos: null\r\n                },\r\n                target: null\r\n            };\r\n            CreepSpawning.sendToSpawnInitializacion(this.mainRoom, nameT, 'transporter', dataT, '-', false);\r\n            //create a upgrader\r\n            const name = creepName();\r\n            const data = {\r\n                'source': containerID,\r\n                'logisticCreepName': null\r\n            };\r\n            CreepSpawning.sendToSpawnInitializacion(this.mainRoom, name, 'upgrader_base', data, 'dpt_upgrade', false);\r\n            this.memory['ticksToSpawn'][name] = null;\r\n        }\r\n        /*\r\n            const savedUpgrader = this.memory['ticksToSpawn'];\r\n            const numUpgraderSaved = Object.keys(savedUpgrader);\r\n            if (numUpgraderSaved.length < 5) {\r\n                const numToSpawn = 5 - numUpgraderSaved.length;\r\n                \r\n                for (let i = 0; i < numToSpawn; ++i) {\r\n                    const name =  creepName();\r\n                    const data: Upgrader_baseData = {\r\n                        'source': containerID,\r\n                        'logisticCreepName': null\r\n                    };\r\n                    CreepSpawning.sendToSpawnInitializacion(this.mainRoom, name, 'upgrader_base', data, 'dpt_upgrade', false);\r\n                    this.memory['ticksToSpawn'][name] = null;\r\n                }\r\n            }\r\n        */\r\n    }\r\n    clearMemory() {\r\n        const savedUpgrader = this.memory['ticksToSpawn'];\r\n        for (let creepName in savedUpgrader) {\r\n            if (savedUpgrader[creepName] && savedUpgrader[creepName] < Game.time) {\r\n                delete this.memory['ticksToSpawn'][creepName];\r\n                delete Memory.creeps[creepName];\r\n            }\r\n        }\r\n    }\r\n    run() {\r\n        if (Game.time % 13 == 0 && Game.rooms[this.mainRoom].controller.level <= 3) {\r\n            this.containerStage();\r\n        }\r\n        if (Game.time % 23 == 0) {\r\n            this.clearMemory();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Dpt_Upgrader.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/colony/nameManagement.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/operationResearch/planningUtils.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/structure/CreepSpawning.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/department/Department.ts"],"map":"{\"version\":3,\"file\":\"Dpt_Upgrader.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/department/dpt_upgrader/Dpt_Upgrader.ts\"],\"names\":[],\"mappings\":\"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\"}"}
