{"code":"import { sendLogisticTask } from \"@/colony/dpt_comunication\";\r\nimport { creepName, logisticTaskName } from \"@/colony/nameManagement\";\r\nimport { getContainerID } from \"@/operationResearch/planningUtils\";\r\nimport { CreepSpawning } from \"@/structure/CreepSpawning\";\r\nimport { Department } from \"../Department\";\r\nexport default class Dpt_Upgrader extends Department {\r\n    constructor(dptRoom) {\r\n        super(dptRoom, 'dpt_upgrade');\r\n    }\r\n    sendTransferTaskContainer() {\r\n        const request = {\r\n            'type': 'TRANSFER',\r\n            'target': {\r\n                'id': this.memory['storage']['id'],\r\n                'resourceType': 'energy',\r\n                'amount': 1\r\n            }\r\n        };\r\n        sendLogisticTask(this.mainRoom, logisticTaskName(request), request);\r\n    }\r\n    container_controllerRealiseTask() {\r\n        const container = Game.getObjectById(this.memory['storage']['id']);\r\n        if (!container)\r\n            return;\r\n        const containerMem = Memory['colony'][this.mainRoom]['dpt_upgrade']['container']; //@ts-ignore\r\n        const stage = Math.trunc(2000 - container.store['energy'] / 500);\r\n        //stage1:   < 1500 \r\n        //stage2:   < 1000\r\n        //stage3:   < 500\r\n        if (stage >= 1 && Game.time >= containerMem['stage1']) {\r\n            this.sendTransferTaskContainer();\r\n            containerMem['stage1'] = Game.time + 50;\r\n        }\r\n        if (stage >= 2 && Game.time >= containerMem['stage2']) {\r\n            this.sendTransferTaskContainer();\r\n            containerMem['stage2'] = Game.time + 50;\r\n        }\r\n        if (stage >= 3 && Game.time >= containerMem['stage3']) {\r\n            this.sendTransferTaskContainer();\r\n            containerMem['stage3'] = Game.time + 50;\r\n        }\r\n    }\r\n    containerStage() {\r\n        if (!this.memory['storage']['id'])\r\n            return;\r\n        this.container_controllerRealiseTask();\r\n        const containerID = this.memory['storage']['id'];\r\n        //calculate energy in container\r\n        const containerID1 = getContainerID(this.mainRoom, 'container_source1');\r\n        const containerID2 = getContainerID(this.mainRoom, 'container_source2');\r\n        //@ts-ignore\r\n        const container1 = Game.getObjectById(containerID1); //@ts-ignore\r\n        const container2 = Game.getObjectById(containerID2); //@ts-ignore\r\n        const energyInContainers = container1.store[RESOURCE_ENERGY] + container2.store[RESOURCE_ENERGY];\r\n        if (energyInContainers > 3000) {\r\n            //create a transporter\r\n            const numBuilders = Object.keys(this.memory['ticksToSpawn']).length;\r\n            if (numBuilders % 2 == 0) { //every 2 builders a transporter\r\n                const nameT = creepName();\r\n                const dataT = {\r\n                    source: {\r\n                        id: null,\r\n                        roomName: this.mainRoom,\r\n                        pos: null\r\n                    },\r\n                    target: null\r\n                };\r\n                CreepSpawning.sendToSpawnInitializacion(this.mainRoom, nameT, 'transporter', dataT, '-', false);\r\n            }\r\n            //create a upgrader\r\n            const name = creepName();\r\n            const data = {\r\n                'source': containerID,\r\n                'logisticCreepName': null\r\n            };\r\n            CreepSpawning.sendToSpawnInitializacion(this.mainRoom, name, 'upgrader_base', data, 'dpt_upgrade', false);\r\n            this.memory['ticksToSpawn'][name] = null;\r\n        }\r\n    }\r\n    containerStage1() {\r\n        if (!this.memory['storage']['id'])\r\n            return;\r\n        const containerID = this.memory['storage']['id'];\r\n    }\r\n    clearMemory() {\r\n        const savedUpgrader = this.memory['ticksToSpawn'];\r\n        for (let creepName in savedUpgrader) {\r\n            if (savedUpgrader[creepName] && savedUpgrader[creepName] < Game.time) {\r\n                delete this.memory['ticksToSpawn'][creepName];\r\n                delete Memory.creeps[creepName];\r\n            }\r\n        }\r\n    }\r\n    run() {\r\n        if (Game.time % 83 == 0 && Game.rooms[this.mainRoom].controller.level <= 3) {\r\n            this.containerStage();\r\n        }\r\n        if (Game.time % 23 == 0) {\r\n            this.clearMemory();\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=Dpt_Upgrader.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/colony/dpt_comunication.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/colony/nameManagement.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/operationResearch/planningUtils.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/structure/CreepSpawning.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/department/Department.ts"],"map":"{\"version\":3,\"file\":\"Dpt_Upgrader.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../src/department/dpt_upgrader/Dpt_Upgrader.ts\"],\"names\":[],\"mappings\":\"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\"}"}
