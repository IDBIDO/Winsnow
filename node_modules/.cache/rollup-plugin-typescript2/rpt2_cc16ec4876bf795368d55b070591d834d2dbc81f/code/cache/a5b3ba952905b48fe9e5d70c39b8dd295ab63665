{"code":"import * as setting from \"@/creep/setting\";\r\nexport class CreepSpawning {\r\n    constructor(mainRoom) {\r\n        this.mainRoom = mainRoom;\r\n        this.memory = Memory['colony'][mainRoom]['creepSpawning'];\r\n    }\r\n    /*\r\n        colonyMem['Spawning'] = {};\r\n        colonyMem['Spawning']['spawn'] = [];\r\n        colonyMem['Spawning']['task'] = [];\r\n        colonyMem['Spawning']['completeTask'] = {};\r\n    */\r\n    notifyTaskComplete(name, role, dpt) {\r\n        const energyRCL = setting.getEnergyRCL(Game.rooms[this.mainRoom].energyCapacityAvailable);\r\n        Memory['colony'][this.mainRoom][dpt]['ticksToSpawn'][name] = Game.time + setting.ticksToSpawn(role, energyRCL) + 1500 + 10;\r\n    }\r\n    uid() {\r\n        //return (performance.now().toString(36)+Math.random().toString(36)).replace(/\\./g,\"\");\r\n        return (Math.random().toString(36).substr(2, 9));\r\n    }\r\n    spawn(spawnName, creepName, creepRole, creepData, dpt, pull) {\r\n        const spawn = Game.spawns[spawnName];\r\n        const energyRCL = setting.getEnergyRCL(Game.rooms[this.mainRoom].energyCapacityAvailable);\r\n        //console.log(energyRCL);\r\n        const creepBody = setting.getBody(creepRole, energyRCL);\r\n        if (creepData) {\r\n            return spawn.spawnCreep(creepBody, creepName, {\r\n                memory: {\r\n                    role: creepRole,\r\n                    department: dpt,\r\n                    roomName: this.mainRoom,\r\n                    task: creepData,\r\n                    dontPullMe: pull\r\n                }\r\n            });\r\n        }\r\n        else\r\n            return spawn.spawnCreep(creepBody, creepName);\r\n    }\r\n    static sendToSpawnRecycle(roomName, creepName, role, dpt) {\r\n        Memory['colony'][roomName]['creepSpawning']['task'][creepName] = {};\r\n        const spawnTask = Memory['colony'][roomName]['creepSpawning']['task'][creepName];\r\n        spawnTask['role'] = role;\r\n        spawnTask['roomName'] = roomName;\r\n        spawnTask['department'] = dpt;\r\n    }\r\n    /** send a creep spawning task. In case of recycle creep, param task must be null*/\r\n    static sendToSpawnInitializacion(roomName, creepName, role, task, dpt, pull) {\r\n        Memory['colony'][roomName]['creepSpawning']['task'][creepName] = {};\r\n        const spawnTask = Memory['colony'][roomName]['creepSpawning']['task'][creepName];\r\n        spawnTask['role'] = role;\r\n        spawnTask['roomName'] = roomName;\r\n        spawnTask['department'] = dpt;\r\n        spawnTask['task'] = task;\r\n        spawnTask['dontPullMe'] = pull;\r\n    }\r\n    notifyOneTimeTRansporter(creepName, creepRole) {\r\n        const energyRCL = setting.getEnergyRCL(Game.rooms[this.mainRoom].energyCapacityAvailable);\r\n        Memory['colony'][this.mainRoom]['dpt_logistic']['oneTimeCreeps'][creepName] = Game.time + setting.ticksToSpawn(creepRole, energyRCL) + 1500 + 10;\r\n    }\r\n    spawnTaskExecution() {\r\n        const spawnTask = this.memory['task'];\r\n        let spawnIndex = 0;\r\n        for (let creepName in spawnTask) {\r\n            //console.log(creepName);\r\n            const spawnList = this.memory['spawn'];\r\n            if (spawnIndex < spawnList.length) {\r\n                const spawnName = spawnList[spawnIndex];\r\n                const creepRole = spawnTask[creepName]['role'];\r\n                const creepDpt = spawnTask[creepName]['department'];\r\n                const creepData = spawnTask[creepName]['task']; //////////////////////\r\n                const pull = spawnTask[creepName]['dontPullMe'];\r\n                if (this.spawn(spawnName, creepName, creepRole, creepData, creepDpt, pull) == OK) {\r\n                    delete spawnTask[creepName];\r\n                    if (Memory['colony'][this.mainRoom][creepDpt])\r\n                        this.notifyTaskComplete(creepName, creepRole, creepDpt);\r\n                    else if (creepRole == 'transporter')\r\n                        this.notifyOneTimeTRansporter(creepName, creepRole);\r\n                }\r\n                ++spawnIndex;\r\n            }\r\n        }\r\n    }\r\n    getAvailableSpawnName() {\r\n        const spawnList = this.memory['spawn'];\r\n        for (let i = 0; i < spawnList.length; ++i) {\r\n            if (Game.spawns[spawnList[i]].spawning == null)\r\n                return spawnList[i];\r\n        }\r\n        return null;\r\n    }\r\n    spawnQueen() {\r\n        const spawnName = this.getAvailableSpawnName();\r\n        if (spawnName) {\r\n            //console.log(spawnName);\r\n            const source = {\r\n                id: null,\r\n                roomName: null,\r\n                pos: null\r\n            };\r\n            const data = {\r\n                source: source,\r\n                target: null\r\n            };\r\n            let r = this.spawn(spawnName, 'Queen' + this.mainRoom, 'iniQueen', data, 'dpt_logistic', false);\r\n            //console.log(r);\r\n        }\r\n    }\r\n    static initializeCreepState(creepName) {\r\n        Memory.creeps[creepName]['ready'] = false;\r\n        Memory.creeps[creepName]['working'] = false;\r\n        if (Memory.creeps[creepName]['sendLogisticRequest']) {\r\n            Memory.creeps[creepName]['sendLogisticRequest'] = false;\r\n        }\r\n        //transporter\r\n        if (Memory.creeps[creepName]['sendTaskRequest']) {\r\n            Memory.creeps[creepName]['sendTaskRequest'] = false;\r\n        }\r\n    }\r\n    recycleQueenSpawning(spawnName, creepName, creepRole) {\r\n        const spawn = Game.spawns[spawnName];\r\n        const energyRCL = setting.getEnergyRCL(Game.rooms[this.mainRoom].energyCapacityAvailable);\r\n        const creepBody = setting.getBody(creepRole, energyRCL);\r\n        CreepSpawning.initializeCreepState(creepName);\r\n        const rcode = spawn.spawnCreep(creepBody, creepName);\r\n        if (rcode == OK) {\r\n            CreepSpawning.initializeCreepState(creepName);\r\n            Memory.creeps[creepName]['task'] = {};\r\n            Memory.creeps[creepName]['task']['type'] = null;\r\n        }\r\n        return rcode;\r\n    }\r\n    run() {\r\n        const queen = Game.creeps['Queen' + this.mainRoom];\r\n        let r;\r\n        if (Memory.creeps['Queen' + this.mainRoom]) {\r\n            if (!queen) {\r\n                const spawnName = this.getAvailableSpawnName();\r\n                if (spawnName) {\r\n                    r = this.recycleQueenSpawning(spawnName, 'Queen' + this.mainRoom, 'transporter');\r\n                    //console.log(r);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.spawnQueen();\r\n        }\r\n        if (r != OK)\r\n            this.spawnTaskExecution();\r\n    }\r\n}\r\n//# sourceMappingURL=CreepSpawning.js.map","references":["C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/colony/nameManagement.ts","C:/Users/heche/AppData/Local/Screeps/scripts/127_0_0_1___21025/Winsnow/src/creep/setting.ts"],"map":"{\"version\":3,\"file\":\"CreepSpawning.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/structure/CreepSpawning.ts\"],\"names\":[],\"mappings\":\"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\"}"}
